import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statistics
from scipy import stats

from cephmodeseparation import a,b,c,d,m,n,k,l,FirstOvertonelmcceph,FirstOvertonesmcceph,Fundamentallmcceph,Fundamentalsmcceph


### Determining distances to the LMC and SMC using the generated relations/models ###

## Fundamental Mode Distance determination ##

def FundSMCcephDistance(I, P): # Using the P-L relationship generated by the Fundamental mode SMC Classical Cepheid Variables, calculate distances to the LMC.
    dm = ((np.float64(a) * np.float64(np.log10(P))) + np.float64(b))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FundLMCcephDistance(I, P): # Using the P-L relationship generated by the Fundamental mode LMC Classical Cepheid Variables, calculate distances to the SMC.
    dm = ((np.float64(c) * np.float64(np.log10(P))) + np.float64(d))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

#First Overtone Distance determination

def FOSMCcephDistance(I, P): # Using the P-L relationship generated by the First Overtone SMC Classical Cepheid Variables, calculate distances to the LMC.
    dm = ((np.float64(m) * np.float64(np.log10(P))) + np.float64(n))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

def FOLMCcephDistance(I, P): # Using the P-L relationship generated by the First Overtone LMC Classical Cepheid Variables, calculate distances to the SMC.
    dm = ((np.float64(k) * np.float64(np.log10(P))) + np.float64(l))
    var2 = ((I) - dm) / 5
    dist = 10 * 10 ** var2
    return dist

## Mean Distance determination and %Error ##

# SMC Distance Error

def SMCperror(dist):
    print(dist)
    print(np.abs((dist - 62440) / 62440)*100)

# LMC Distance Error

def LMCperror(dist):
    print(dist)
    print(np.abs((dist - 49590) / 49590)*100)

### Distance Return ###

### Extragalactic Distances ###

# Fundamental Mode SMC Distances
print("SMC Fund Dists")
print(SMCperror(statistics.mean(FundLMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))
print(SMCperror(statistics.mean(FOSMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))
print(SMCperror(statistics.mean(FOLMCcephDistance(Fundamentalsmcceph['I'], Fundamentalsmcceph['P1']))))

# Fundamental Mode LMC Distances
print("LMC Fund Dists")
print(LMCperror(statistics.mean(FundSMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))
print(LMCperror(statistics.mean(FOSMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))
print(LMCperror(statistics.mean(FOLMCcephDistance(Fundamentallmcceph['I'], Fundamentallmcceph['P1']))))

# First Overtone SMC Distances
print("SMC FO Dists")
print(SMCperror(statistics.mean(FundSMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
print(SMCperror(statistics.mean(FundLMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
print(SMCperror(statistics.mean(FOLMCcephDistance(FirstOvertonesmcceph['I'], FirstOvertonesmcceph['P1']))))
 
# First Overtone LMC Distances
print("LMC FO Dists")
print(LMCperror(statistics.mean(FundSMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))
print(LMCperror(statistics.mean(FundLMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))
print(LMCperror(statistics.mean(FOSMCcephDistance(FirstOvertonelmcceph['I'], FirstOvertonelmcceph['P1']))))

### Intragalactic Distances ###

# Model Accuracy Function #
def star_dist_accuracy(modeldist, truedist):
    return np.abs(((truedist - modeldist)/truedist)*100)

from intragen import Fundamentalblgceph, FirstOvertoneblgceph, Fundamentaldiskceph, FirstOvertonediskceph

## Calculating the Model Distance for each dataframe - determining accuracy for each model ##

###

### Generating copies of the imported datasets ###

FundamentalblgcephF = Fundamentalblgceph.copy()
FirstOvertoneblgcephF = FirstOvertoneblgceph.copy()
FundamentaldiskcephF = Fundamentaldiskceph.copy()
FirstOvertonediskcephF = FirstOvertonediskceph.copy()

# Fundamental Galactic Bulge Delta Scuti Dataframe #

FundamentalblgcephF['SMCmodeldist'] = FundSMCcephDistance(FundamentalblgcephF['I'], FundamentalblgcephF['P1'])

FundamentalblgcephF['LMCmodeldist'] = FundLMCcephDistance(FundamentalblgcephF['I'], FundamentalblgcephF['P1'])

#print(FundamentalblgcephF['SMCmodeldist'], FundamentalblgcephF['LMCmodeldist'])

print('Fundamental BULGE SMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FundamentalblgcephF['SMCmodeldist'], FundamentalblgcephF['Distance'])))
print('Fundamental BULGE LMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FundamentalblgcephF['LMCmodeldist'], FundamentalblgcephF['Distance'])))

###

# First Overtone Galactic Bulge Delta Scuti Dataframe #

FirstOvertoneblgcephF['SMCmodeldist'] = FOSMCcephDistance(FirstOvertoneblgcephF['I'], FirstOvertoneblgcephF['P1'])

FirstOvertoneblgcephF['LMCmodeldist'] = FOLMCcephDistance(FirstOvertoneblgcephF['I'], FirstOvertoneblgcephF['P1'])

print('FirstOvertone BULGE SMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FirstOvertoneblgcephF['SMCmodeldist'], FirstOvertoneblgcephF['Distance'])))
print('FirstOvertone BULGE LMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FirstOvertoneblgcephF['LMCmodeldist'], FirstOvertoneblgcephF['Distance'])))

###

# Fundamental Galactic Disk Delta Scuti Dataframe #

FundamentaldiskcephF['SMCmodeldist'] = FundSMCcephDistance(FundamentaldiskcephF['I'], FundamentaldiskcephF['P1'])

FundamentaldiskcephF['LMCmodeldist'] = FundLMCcephDistance(FundamentaldiskcephF['I'], FundamentaldiskcephF['P1'])

print('Fundamental DISK SMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FundamentaldiskcephF['SMCmodeldist'], FundamentaldiskcephF['Distance'])))
print('Fundamental DISK LMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FundamentaldiskcephF['LMCmodeldist'], FundamentaldiskcephF['Distance'])))

###

# First Overtone Galactic Disk Delta Scuti Dataframe #

FirstOvertonediskcephF['SMCmodeldist'] = FundSMCcephDistance(FirstOvertonediskcephF['I'], FirstOvertonediskcephF['P1'])

FirstOvertonediskcephF['LMCmodeldist'] = FundLMCcephDistance(FirstOvertonediskcephF['I'], FirstOvertonediskcephF['P1'])

print('FirstOvertone DISK SMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FirstOvertonediskcephF['SMCmodeldist'], FirstOvertonediskcephF['Distance'])))
print('FirstOvertone DISK LMC CEPH Accuracy %', statistics.median(star_dist_accuracy(FirstOvertonediskcephF['LMCmodeldist'], FirstOvertonediskcephF['Distance'])))

###

# The resulting model and true distances will be exported to the Datavis file (Data visualiation file), Truedist vs Modeldist visualised.

### Intergalactic Distances ###

print('ceph distances complete, sending dataframes to datavis')


### Absolute Magnitude Calculations ###

# Functions #

def FundSMCM(P):
    absm = (a * np.log10(P)) + b
    return absm

def FundLMCM(P):
    absm = (c * np.log10(P)) + d
    return absm

def FOSMCM(P):
    absm = (m * np.log10(P)) + n
    return absm

def FOLMCM(P):
    absm = (k * np.log10(P)) + l
    return absm

# Magnitude Returns

# Using SMC Fundamental #

print(statistics.mean(FundSMCM(Fundamentallmcceph['P1'])))
print(statistics.mean(FundSMCM(FundamentalblgcephF['P1'])))
print(statistics.mean(FundSMCM(FundamentaldiskcephF['P1'])))

# Using SMC First Overtone #

print(statistics.mean(FOSMCM(FirstOvertonelmcceph['P1'])))
print(statistics.mean(FOSMCM(FirstOvertoneblgcephF['P1'])))
print(statistics.mean(FOSMCM(FirstOvertonediskcephF['P1'])))

# Using LMC Fundamental #

print(statistics.mean(FundLMCM(Fundamentalsmcceph['P1'])))
print(statistics.mean(FundLMCM(FundamentalblgcephF['P1'])))
print(statistics.mean(FundLMCM(FundamentaldiskcephF['P1'])))

# Using LMC First Overtone #

print(statistics.mean(FOLMCM(FirstOvertonesmcceph['P1'])))
print(statistics.mean(FOLMCM(FirstOvertoneblgcephF['P1'])))
print(statistics.mean(FOLMCM(FirstOvertonediskcephF['P1'])))

